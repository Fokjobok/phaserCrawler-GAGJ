/* Dialog container overlaying the Phaser canvas */
.dialogContainer {
    position: absolute;
    top: 0;
    left: 0;


}

/* Main textbox for dialogues */
.textbox {
    position: absolute;
    transform: translateX(-50%);
    width: 50%;
    height: 170px;
    left: 50%;
    bottom: 20px;
    background: rgba(5, 5, 5, 0.8);
    color: white;
    font-size: 18px;
    padding: 12px;
    box-sizing: border-box;
    overflow-y: auto;

}

/* Speaker name box nested inside the textbox, positioned above it */
.speakerNameBox {
    position: absolute;



    min-width: 6rem;
    height: 1.5rem;
    left: 2rem;
    bottom: 180px;

    background: rgba(5, 5, 5, 0.8);
    color: gold;
    font-size: 1.2rem;
    text-align: center;

    padding: 15px 15px;
    border-radius: 0px 8px;
    display: none;
    font-weight: bold;

}

/* NPC image style */
.npcImage {
    position: absolute;
    transform: translateX(-50%);
    width: 20%;
    left: 50%;
    bottom: 180px;

    display: none;

}

/* Narrator text style */
.narratorText {
    font-style: italic;
}





#storeMenuContainer {
    position: absolute;
    top: 100px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);

    padding: 20px;
    border-radius: 10px;
    font-size: 24px;
    display: flex;
    flex-direction: column;
    gap: 10px;

}

.storeRow {
    display: flex;
    min-width: 500px;
    font-weight: bold;
    justify-content: space-between;
    align-items: center;
    background: rgba(255, 255, 255, 0.9);
    padding: 10px;
    border-radius: 5px;

}

#storeMenuContainer button {
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 20px;
    margin: 0rem;
    padding: 10px 15px;
    cursor: pointer;

}

#storeMenuContainer .backButton {
    margin-top: 10px;
    
}




/* Contenedor global del HUD */
#hudContainer {
    position: absolute;
    top: 2rem;
    left: 2rem; /* O la posición que desees */
    display: flex;
    gap: 2rem;
    border-radius: 100px;
}

/* Cada miembro se muestra como un bloque con imagen y detalles */
.hudMember {
    display: flex;
    align-items: center;
    overflow: hidden; /* Para ocultar los detalles cuando no estén expandidos */
    transition: width 0.5s ease;
    width: 100px; /* Ancho fijo para la miniatura */
    height: 100px;
    cursor: pointer;
    position: relative;
    border-radius: 5rem;
    background-blend-mode: multiply;
}

/* El bloque de imagen siempre se muestra y tiene tamaño fijo */
.hudImage {
    width: 100px;
    height: 100px;
    border-radius: 5rem;
    background-size: cover;
    background-position: center;
    flex-shrink: 0;
}

/* Contenedor de detalles, inicialmente oculto */
.hudDetail {
    overflow: hidden;
    white-space: nowrap;
    width: 0; /* Se oculta inicialmente */
    transition: width 0.3s ease;
}

/* Al expandir el miembro, se asigna un ancho al contenedor de detalles */
.hudMember.expanded {
    width: 400px; /* Ancho total del miembro expandido (imagen + detalle) */
}

.hudMember.expanded .hudDetail {
    width: 300px; /* Ancho asignado para la información; la imagen conserva 100px */
}

/* Para las columnas dentro del detalle */
.hudDetailColumn {
    
    color: white;
    display: inline-block;
    vertical-align: top;
    width: 100%; /* Se reparte el espacio entre dos columnas */

}

/* Opcional: estilos adicionales para lockOverlay y otros elementos */
.lockOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 48px;
    color: white;
    background: rgba(0, 0, 0, 0.7);
}

.hudInfo {
    display: flex;
    flex-direction: row;
    padding-left: 2rem;
}